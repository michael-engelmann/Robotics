<!-- ur5_gazebo_pid.launch -->
<!-- Launches Gazebo and UR5-control 
used for Optimizing PIDs, see
https://roboticscasual.com/ros-tutorial-control-the-ur5-robot-with-ros_control-tuning-a-pid-controller/
  
-->
<launch>



  <!-- load the controllers for robot joints-->
    <node name="controller_spawner" pkg="controller_manager" 
          type="spawner" respawn="false"
          output="screen" 
          args="shoulder_pan_joint_position_controller shoulder_lift_joint_position_controller
                elbow_joint_position_controller wrist_1_joint_position_controller
                wrist_2_joint_position_controller wrist_3_joint_position_controller
                joint_state_controller"/>

 <!-- spawnen des UR5 in Gazebo mit vorgegebener Pose
      nicht die URDF von Dairal, sondern eigene Version im EMR22 repository-->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" 
        type="spawn_model" 
        args="-file $ur5_jnt_pos_ctrl.urdf
             -urdf -x 0 -y 0 -z 0.1 -model ur5
             -J shoulder_lift_joint -1.5
             -J shoulder_pan_joint 0.0 
             -J elbow_joint 0.0
             -J wrist1_joint 0.0
             -J wrist2_joint 0.0
             -J wrist3_joint 0.0             
             " />

  <!--statt  <include file="$(find emr22)/launch/ur5_joint_position_control.launch" /> -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$ur5_jnt_pos_ctrl.yaml" 
              command="load"/>

    <param name="robot_description" textfile="ur5_jnt_pos_ctrl.urdf"/>
    
    

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" 
        type="robot_state_publisher"
        respawn="false" output="screen">
        <remap from="/joint_states" to="/ur5/joint_states" />
    </node>

</launch>